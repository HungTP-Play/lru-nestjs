version: '3.7'

configs:

  postgres_exporter_config:
    file: ./queries.yaml

services:
  redis:
    image: redis:7-alpine
    ports:
      - 6379:6379
    volumes:
      - ~/data/lru-nestjs/redis:/data
  rabbitmq:
    image: rabbitmq:alpine
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
      - ~/data/lru-nestjs/rabbitmq:/var/lib/rabbitmq
  postgres:
    image: postgres:15.3-alpine3.17
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    command: postgres -c shared_preload_libraries=pg_stat_statements -c pg_stat_statements.track=all -c max_connections=200
    volumes:
      - ~/data/lru-nestjs/postgres:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./postgres.conf:/etc/postgresql/postgresql.conf
    ports:
      - 5432:5432
  gateway:
    image: lru-nestjs-gateway:local
    build:
      context: ./gateway
      dockerfile: Dockerfile
    environment:
      - PORT=3333
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - MAPPER_HOST=mapper
      - MAPPER_PORT=1111
      - REDIRECT_HOST=redirect
      - REDIRECT_PORT=2222
      - OTEL_ENDPOINT=agent:4317
    depends_on:
      - redis
      - mapper
      - redirect
    volumes:
      - ./gateway:/app
      - ~/data/lru-nestjs/logs:/var/log
    command:
      - npm
      - run
      - start
    ports:
      - 3333:3333
  mapper:
    image: lru-nestjs-mapper:local
    build:
      context: ./mapper
      dockerfile: Dockerfile
    environment:
      - PORT=1111
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=lru_mapper
      - CACHE_HOST=redis
      - CACHE_PORT=6379
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_PORT=5672
      - RABBITMQ_USER=guest
      - RABBITMQ_PASSWORD=guest
      - RABBITMQ_QUEUE=map
      - REDIRECT_QUEUE=redirect
      - ANALYTIC_QUEUE=analytic
      - OTEL_ENDPOINT=agent:4317
      - DATABASE_URL=postgres://postgres:postgres@postgres:5432/lru_mapper
      - GATEWAY_URL=http://gateway:3333
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672
    depends_on:
      - postgres
      - redis
      - rabbitmq
    ports:
      - 1111:1111
    volumes:
      - ./mapper:/app
      - ~/data/lru-nestjs/logs:/var/log
    command:
      - npm
      - run
      - start
  redirect:
    image: lru-nestjs-redirect:local
    build:
      context: ./redirect
      dockerfile: Dockerfile
    environment:
      - PORT=2222
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_PORT=5672
      - RABBITMQ_USER=guest
      - RABBITMQ_PASSWORD=guest
      - RABBITMQ_QUEUE=map
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=lru_redirect
      - REDIRECT_QUEUE=redirect
      - ANALYTIC_QUEUE=analytic
      - OTEL_ENDPOINT=agent:4317
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672
      - DATABASE_URL=postgres://postgres:postgres@postgres:5432/lru_redirect
    depends_on:
      - rabbitmq
      - redis
      - postgres
    ports:
      - 2222:2222
    volumes:
      - ./redirect:/app
      - ~/data/lru-nestjs/logs:/var/log
    command:
      - npm
      - run
      - start
  analytic:
    image: lru-nestjs-analytic:local
    build:
      context: ./analytic
      dockerfile: Dockerfile
    environment:
      - PORT=4444
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_PORT=5672
      - RABBITMQ_USER=guest
      - RABBITMQ_PASSWORD=guest
      - RABBITMQ_QUEUE=map
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=lru_analytic
      - ANALYTIC_QUEUE=analytic
      - OTEL_ENDPOINT=agent:4317
      - DATABASE_URL=postgres://postgres:postgres@postgres:5432/lru_analytic
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672
    depends_on:
      - rabbitmq
      - redis
      - postgres
    ports:
      - 4444:4444
    volumes:
      - ./analytic:/app
      - ~/data/lru-nestjs/logs:/var/log
    command:
      - npm
      - run
      - start
  # prometheus:
  #   image: prom/prometheus
  #   ports:
  #     - 9090:9090
  #   volumes:
  #     - ./prometheus.yml:/etc/prometheus/prometheus.yml
  #   command:
  #     - '--config.file=/etc/prometheus/prometheus.yml'
  #     - '--storage.tsdb.path=/prometheus'
  #     - '--web.console.libraries=/usr/share/prometheus/console_libraries'
  #     - '--web.console.templates=/usr/share/prometheus/consoles'
  #     - '--web.enable-remote-write-receiver'
  #   expose:
  #     - 9090
  # grafana:
  #   image: grafana/grafana
  #   ports:
  #     - 3001:3000
  #   user: root
  #   volumes:
  #     - ./grafana:/var/lib/grafana
  #     - ./grafana-datasource.yaml:/etc/grafana/provisioning/datasources/datasource.yaml
  #   environment:
  #     - GF_SECURITY_ADMIN_USER=admin
  #     - GF_SECURITY_ADMIN_PASSWORD=admin
  #     - GF_FEATURE_TOGGLES_ENABLE=traceqlEditor,lokiLogs
  #   depends_on:
  #     - loki
  # loki:
  #   image: grafana/loki:main
  #   user: root
  #   ports:
  #     - 3100:3100
  #   command: -config.file=/etc/loki/local-config.yaml
  #   volumes:
  #     - ./loki:/etc/loki
  #     - ./loki-config.yaml:/etc/loki/local-config.yaml
  # promtail_grafana:
  #   image: grafana/promtail:main
  #   user: root
  #   volumes:
  #     - ./promtail:/etc/promtail
  #     - ~/data/lru-nestjs/logs:/var/log
  #     - ./promtail-config.yaml:/etc/promtail/local-config.yaml
  #   command: -config.file=/etc/promtail/local-config.yaml
  #   depends_on:
  #     - loki
  # tempo:
  #   image: grafana/tempo:latest
  #   user: root
  #   command:
  #     - "-config.file=/etc/tempo/tempo-config.yaml"                           # disables the requirement for the X-Scope-OrgID header
  #     - "-server.http-listen-port=3200"
  #   volumes:
  #     - ~/data/lru-nestjs/tempo:/tmp/tempo
  #     - ./tempo-config.yaml:/etc/tempo/tempo-config.yaml
  #   depends_on:
  #     - loki
  #     - prometheus
  # agent:
  #   user: root
  #   image: grafana/agent:main
  #   volumes:
  #     - ./agent.yaml:/etc/agent-config/agent.yaml
  #     - ~/data/lru-nestjs/agent:/tmp/agent
  #   entrypoint:
  #     - /bin/grafana-agent
  #     - -config.file=/etc/agent-config/agent.yaml
  #     - -metrics.wal-directory=/tmp/agent/wal
  #     - -enable-features=integrations-next
  #     - -config.expand-env
  #     - -config.enable-read-api
  #   environment:
  #     HOSTNAME: agent
  #     LOKI_HOST: loki:9095
  #     TEMPO_HOST: tempo:4317
  #     POSTGRES_HOST: postgres:5432
  #     REDIS_HOST: redis:6379
  #   ports:
  #     - "12345:12345"
  #   depends_on:
  #     - loki
  #     - tempo
  # k6-shorten:
  #   image: grafana/k6
  #   volumes:
  #     - ./k6:/scripts
  #   command:
  #     - 'run'
  #     - '/scripts/shorten.js'
  #   depends_on:
  #     - gateway
  #   restart: unless-stopped
  # k6-redirect:
  #   image: grafana/k6
  #   volumes:
  #     - ./k6:/scripts
  #   command:
  #     - 'run'
  #     - '/scripts/redirect.js'
  #   restart: unless-stopped
  #   depends_on:
  #     - gateway
